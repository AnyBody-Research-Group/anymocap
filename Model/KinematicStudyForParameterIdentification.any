 AnyBodyStudy KinematicStudyForParameterIdentification = {
//  AnyFolder &C3DData = Main.Studies.InverseDynamics.C3DData;
  AnyFolder &ModelEnvironmentConnection = Main.Studies.InverseDynamics.ModelEnvironmentConnection;
  AnyFolder &EnvironmentModel = Main.EnvironmentModel;
  //AnyFolder &BodyModel = Main.HumanModel.BodyModel;
  
  // Construct body model with muscles excluded
  AnyFolder &Scaling = Main.HumanModel.Scaling;
  AnyFolder BodyModel = {
    AnyFolder Trunk = {
      AnyFolder &SegmentsLumbar = Main.HumanModel.BodyModel.Trunk.SegmentsLumbar;
      AnyFolder &SegmentsThorax = Main.HumanModel.BodyModel.Trunk.SegmentsThorax ;
      AnyFolder &SegmentsCervicalSpine = Main.HumanModel.BodyModel.Trunk.SegmentsCervicalSpine ;
      AnyFolder &JointsLumbar = Main.HumanModel.BodyModel.Trunk.JointsLumbar ;
      AnyFolder &JointsCervicalSpine = Main.HumanModel.BodyModel.Trunk.JointsCervicalSpine ;
    };
    
    AnyFolder Right = {
      AnyFolder ShoulderArm = {
        AnyFolder &Seg = Main.HumanModel.BodyModel.Right.ShoulderArm.Seg;
        AnyFolder &Jnt = Main.HumanModel.BodyModel.Right.ShoulderArm.Jnt;
        AnyFolder &rake = Main.HumanModel.BodyModel.Right.ShoulderArm.Mus.ArtificialRake;
      };
      AnyFolder Leg = {
        AnyFolder &Seg = Main.HumanModel.BodyModel.Right.Leg.Seg;
        AnyFolder &Jnt = Main.HumanModel.BodyModel.Right.Leg.Jnt;
      };
    };
    AnyFolder Left = {
      AnyFolder ShoulderArm = {
        AnyFolder &Seg = Main.HumanModel.BodyModel.Left.ShoulderArm.Seg;
        AnyFolder &Jnt = Main.HumanModel.BodyModel.Left.ShoulderArm.Jnt;
        AnyFolder &rake = Main.HumanModel.BodyModel.Left.ShoulderArm.Mus.ArtificialRake;
      };
      AnyFolder Leg = {
        AnyFolder &Seg = Main.HumanModel.BodyModel.Left.Leg.Seg;
        AnyFolder &Jnt = Main.HumanModel.BodyModel.Left.Leg.Jnt;
      };
    };
  };
    Kinematics.PosAnalysisOnlyOnOff=On; //only run the position analysis 
    InitialConditions.PosAnalysisOnlyOnOff=On; //only run the position analysis 
    
    #if MOCAP_IS_STANDING_REFERENCE 
    nStep=1; 
    #else
    nStep = 70;
    #endif
    Gravity = Main.ModelSetup.Gravity;
    tStart = Main.ModelSetup.tStart; 
    tEnd = Main.ModelSetup.tEnd;
    
    InitialConditions.SolverType = KinSolOverDeterminate;
    Kinematics.SolverType = KinSolOverDeterminate;
    InitialConditions.KinematicTol=1e-3;
    Kinematics.KinematicTol=1e-5; 
    
  };
  
